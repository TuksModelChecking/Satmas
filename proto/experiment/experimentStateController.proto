syntax = "proto3";

package experiment;

option go_package = "ui/proto";

import "experiment/experiment.proto";

// The experiment executor service definition.
service ExperimentStateController {
  // persists experiment
  rpc SaveExperiment(SaveExperimentRequest) returns (SaveExperimentResponse) {}

  // run experiment
  rpc RunExperiment(RunExperimentRequest) returns (RunExperimentResponse) {}

  // mark failed
  rpc MarkExperimentFailed(MarkExperimentFailedRequest)
      returns (MarkExperimentFailedResponse) {}

  // mark successful
  rpc MarkExperimentSuccessful(MarkExperimentSuccessfulRequest)
      returns (MarkExperimentSuccessfulResponse) {}
}

message SaveExperimentRequest { Experiment experiment = 1; }

message SaveExperimentResponse { Experiment experiment = 1; }

message RunExperimentRequest { Experiment experiment = 1; }

message RunExperimentResponse {}

message MarkExperimentFailedRequest { string id = 1; }

message MarkExperimentFailedResponse {}

message ResourceStateAtTimestemp {
  repeated string resourceIDs = 1;
  repeated int32 resourceStates = 2;
}

message ActionListAtTimestep {
  repeated int32 agentIDs = 1;
  repeated string actions = 2;
}

message ExperimentResult {
  repeated ResourceStateAtTimestemp resourceStates = 1;
  repeated ActionListAtTimestep actionList = 2;
  string result = 3;
}

message MarkExperimentSuccessfulRequest {
  string id = 1;
  ExperimentResult result = 2;
}

message MarkExperimentSuccessfulResponse {}